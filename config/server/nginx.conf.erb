upstream api_admin {
  server localhost:3000;
}

upstream portal {
  server localhost:6000;
}

server {
  server_name <%= domain.split(",").join(" ") %>;

  server_tokens off;
  <% domains = domain.split(",") %>
  <% if domains.count > 1 %>
    <% domains.drop(1).each do |d| %>

  if ($host = <%= d %>) {
    return 301 https://<%= domains.first %>$request_uri;
  }
    <% end %>
  <% end %>

  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Host $host;
  proxy_hide_header X-Powered-By;

  error_page 503 @503;

  # Return a 503 error if the maintenance page exists.
  if (-f <%= api_dir %>/shared/public/system/maintenance.html) {
    return 503;
  }

  rewrite ^/api/admin(/.*|$) /admin permanent;

  location ~ ^/api(/.*|$) {
    root <%= api_dir %>/current/public;
    proxy_pass http://api_admin;
    proxy_redirect off;

    rewrite ^/api(/.*)$ $1 break;
  }

  location ~ ^/uploads(/.*|$) {
    root <%= api_dir %>/current/public;
    gzip_static on;
  }

  location ~ ^/(admin|private|rails|health_check)(/.*|$) {
    root <%= api_dir %>/current/public;

    proxy_connect_timeout       600;
    proxy_read_timeout          600;
    fastcgi_read_timeout        600;

    proxy_pass http://api_admin;
    proxy_redirect off;
  }

  # Rails assets
  location ~ ^/assets/ {
    root <%= api_dir %>/current/public;
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  # Angular app
  location /observations-tool {
    rewrite ^([^.]*[^/])$ $1/ permanent;
  }

  location /observations-tool/ {
    alias <%= obs_tool_dir %>/dist/;
    index index.html;
    try_files $uri $uri/ /index.html =404;
  }

  # Next.js frontend
  location / {
    proxy_pass http://portal;
    proxy_redirect off;
  }

  location @503 {
    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }

    root <%= api_dir %>/shared/public;
    rewrite ^(.*)$ /system/maintenance.html break;
  }

  # certbot will install certificates
}
